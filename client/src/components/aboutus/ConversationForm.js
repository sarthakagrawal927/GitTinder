import React from "react";
import { ConversationalForm } from "conversational-form";

export default class MyForm extends React.PureComponent {
  constructor(props) {
    super(props);
    this.formFields = [
      {
        tag: "input",
        type: "text",
        name: "fullName",
        "cf-questions": "What is your Name?",
      },
      {
        tag: "input",
        type: "text",
        name: "response",
        "cf-questions":
          "Hi {fullName}, here is some information regarding our projects \n\nGitTinder - A website which stands to be an hub for interaction between developers for project development & learning \n\nMemenza - This website would be having meme tournaments, memes by category and in future memes generated by Artificial Intelligence \n\n How does it sound to you ? ",
      },
      {
        tag: "input",
        type: "text",
        name: "fullName",
        "cf-questions":
          "I am glad you said {response}, thanks for your time. You can now return back.",
      },
    ];

    this.submitCallback = this.submitCallback.bind(this);
  }

  componentDidMount() {
    this.cf = ConversationalForm.startTheConversation({
      options: {
        submitCallback: this.submitCallback,
        preventAutoFocus: true,
        // loadExternalStyleSheet: false
      },
      tags: this.formFields,
    });
    this.elem.appendChild(this.cf.el);
  }

  submitCallback() {
    // var formDataSerialized = this.cf.getFormData(true);
    // console.log("Formdata, obj:", formDataSerialized);
    this.cf.addRobotChatResponse(
      "Thanks for your time, you can now return back.",
    );
  }

  render() {
    return (
      <div className='box'>
        <div ref={(ref) => (this.elem = ref)} />
      </div>
    );
  }
}
